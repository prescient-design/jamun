# @package _global_

compute_average_squared_distance_from_data: false

model:
  average_squared_distance: 0.332
  sigma_distribution:
    _target_: jamun.distributions.ConstantSigma
    sigma: 0.04
  max_radius: 1.0
  optim:
    lr: 0.002
  use_torch_compile: true
  torch_compile_kwargs:
    fullgraph: true
    dynamic: true
    mode: default

callbacks:
  viz:
    sigma_list: ["${model.sigma_distribution.sigma}"]

data:
  datamodule:
    num_workers: 4
    batch_size: 32
    datasets:
      train:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/IDRome_v4_preprocessed/all_atom_relaxed_combined/"
        traj_pattern: "^(.*)/traj.xtc"
        pdb_pattern: "^(.*)/top.pdb"

      val:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/IDRome_v4_preprocessed/all_atom_relaxed_combined/"
        traj_pattern: "^(.*)/traj.xtc"
        pdb_pattern: "^(.*)/top.pdb"
        subsample: 100

      test:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/IDRome_v4_preprocessed/all_atom_relaxed_combined/"
        traj_pattern: "^(.*)/traj.xtc"
        pdb_pattern: "^(.*)/top.pdb"
        subsample: 100

trainer:
  val_check_interval: 30000
  limit_val_batches: 1000
  max_epochs: 10

logger:
  wandb:
    group: train_idrome

