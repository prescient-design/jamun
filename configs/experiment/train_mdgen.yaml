# @package _global_

model:
  sigma_distribution:
    _target_: jamun.distributions.ConstantSigma
    sigma: 0.04
  max_radius: 1.0
  optim:
    lr: 0.002

callbacks:
  viz:
    sigma_list: ["${model.sigma_distribution.sigma}"]

data:
  datamodule:
    batch_size: 16
    datasets:
      train:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/mdgen/data/4AA_sims_partitioned/train/"
        traj_pattern: "^(.*).xtc"
        pdb_pattern: "^(.*).pdb"
        as_iterable: true

      val:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/mdgen/data/4AA_sims_partitioned/val/"
        traj_pattern: "^(.*).xtc"
        pdb_pattern: "^(.*).pdb"
        as_iterable: true
        subsample: 100

      test:
        _target_: jamun.data.parse_datasets_from_directory
        root: "${paths.data_path}/mdgen/data/4AA_sims_partitioned/test/"
        traj_pattern: "^(.*).xtc"
        pdb_pattern: "^(.*).pdb"
        as_iterable: true
        subsample: 100

trainer:
  val_check_interval: 30000
  limit_val_batches: 1000
  max_epochs: 10

logger:
  wandb:
    group: train_mdgen


resume_from_checkpoint:
  wandb_train_run_path: prescient-design/jamun/zrlnc4a6
  checkpoint_type: last